[[package]]
name = "black"
version = "25.9.0"
description = "The uncompromising code formatter."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
packaging = ">=22.0"
pathspec = ">=0.9.0"
platformdirs = ">=2"
pytokens = ">=0.1.10"

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.10)"]
jupyter = ["ipython (>=7.8.0)", "tokenize-rt (>=3.2.0)"]
uvloop = ["uvloop (>=0.15.2)"]

[[package]]
name = "cfgv"
version = "3.4.0"
description = "Validate configuration and produce human readable error messages."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "click"
version = "8.3.0"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.10"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "distlib"
version = "0.4.0"
description = "Distribution utilities"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "filelock"
version = "3.20.0"
description = "A platform independent file lock."
category = "main"
optional = false
python-versions = ">=3.10"

[[package]]
name = "identify"
version = "2.6.15"
description = "File identification library for Python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
license = ["ukkonen"]

[[package]]
name = "iniconfig"
version = "2.3.0"
description = "brain-dead simple config-ini parsing"
category = "main"
optional = false
python-versions = ">=3.10"

[[package]]
name = "isort"
version = "7.0.0"
description = "A Python utility / library to sort Python imports."
category = "main"
optional = false
python-versions = ">=3.10.0"

[package.extras]
colors = ["colorama"]
plugins = ["setuptools"]

[[package]]
name = "mypy-extensions"
version = "1.1.0"
description = "Type system extensions for programs checked with the mypy type checker."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "nodeenv"
version = "1.9.1"
description = "Node.js virtual environment builder"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "packaging"
version = "25.0"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pathspec"
version = "0.12.1"
description = "Utility library for gitignore style pattern matching of file paths."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "platformdirs"
version = "4.5.0"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`."
category = "main"
optional = false
python-versions = ">=3.10"

[package.extras]
docs = ["furo (>=2025.9.25)", "proselint (>=0.14)", "sphinx-autodoc-typehints (>=3.2)", "sphinx (>=8.2.3)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest-cov (>=7)", "pytest-mock (>=3.15.1)", "pytest (>=8.4.2)"]
type = ["mypy (>=1.18.2)"]

[[package]]
name = "pluggy"
version = "1.6.0"
description = "plugin and hook calling mechanisms for python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark", "coverage"]

[[package]]
name = "pre-commit"
version = "4.3.0"
description = "A framework for managing and maintaining multi-language pre-commit hooks."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
cfgv = ">=2.0.0"
identify = ">=1.0.0"
nodeenv = ">=0.11.1"
pyyaml = ">=5.1"
virtualenv = ">=20.10.0"

[[package]]
name = "pygments"
version = "2.19.2"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "pytest"
version = "8.4.2"
description = "pytest: simple powerful testing with Python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
colorama = {version = ">=0.4", markers = "sys_platform == \"win32\""}
iniconfig = ">=1"
packaging = ">=20"
pluggy = ">=1.5,<2"
pygments = ">=2.7.2"

[package.extras]
dev = ["argcomplete", "attrs (>=19.2)", "hypothesis (>=3.56)", "mock", "requests", "setuptools", "xmlschema"]

[[package]]
name = "pytokens"
version = "0.2.0"
description = "A Fast, spec compliant Python 3.13+ tokenizer that runs on older Pythons."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["black", "build", "mypy", "pytest", "pytest-cov", "setuptools", "tox", "twine", "wheel"]

[[package]]
name = "pyyaml"
version = "6.0.3"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "virtualenv"
version = "20.35.4"
description = "Virtual Python Environment builder"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
distlib = ">=0.3.7,<1"
filelock = ">=3.12.2,<4"
platformdirs = ">=3.9.1,<5"

[package.extras]
docs = ["furo (>=2023.7.26)", "proselint (>=0.13)", "sphinx (>=7.1.2,!=7.3)", "sphinx-argparse (>=0.4)", "sphinxcontrib-towncrier (>=0.2.1a0)", "towncrier (>=23.6)"]
test = ["covdefaults (>=2.3)", "coverage-enable-subprocess (>=1)", "coverage (>=7.2.7)", "flaky (>=3.7)", "packaging (>=23.1)", "pytest-env (>=0.8.2)", "pytest-freezer (>=0.4.8)", "pytest-mock (>=3.11.1)", "pytest-randomly (>=3.12)", "pytest-timeout (>=2.1)", "pytest (>=7.4)", "setuptools (>=68)", "time-machine (>=2.10)"]

[metadata]
lock-version = "1.1"
python-versions = "^3.12"
content-hash = "123bdbae0e25832ed33ef3fe989375eeb73acdd4360f92c47762151ce40ebc95"

[metadata.files]
black = []
cfgv = []
click = []
colorama = []
distlib = []
filelock = []
identify = []
iniconfig = []
isort = []
mypy-extensions = []
nodeenv = []
packaging = []
pathspec = []
platformdirs = []
pluggy = []
pre-commit = []
pygments = []
pytest = []
pytokens = []
pyyaml = []
virtualenv = []
